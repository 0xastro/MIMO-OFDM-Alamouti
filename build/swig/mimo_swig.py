# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_mimo_swig', [dirname(__file__)])
        except ImportError:
            import _mimo_swig
            return _mimo_swig
        if fp is not None:
            try:
                _mod = imp.load_module('_mimo_swig', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _mimo_swig = swig_import_helper()
    del swig_import_helper
else:
    import _mimo_swig
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



def high_res_timer_now():
  """high_res_timer_now() -> gr::high_res_timer_type"""
  return _mimo_swig.high_res_timer_now()

def high_res_timer_now_perfmon():
  """high_res_timer_now_perfmon() -> gr::high_res_timer_type"""
  return _mimo_swig.high_res_timer_now_perfmon()

def high_res_timer_tps():
  """high_res_timer_tps() -> gr::high_res_timer_type"""
  return _mimo_swig.high_res_timer_tps()

def high_res_timer_epoch():
  """high_res_timer_epoch() -> gr::high_res_timer_type"""
  return _mimo_swig.high_res_timer_epoch()
class alamouti_encode_cc(object):
    """Proxy of C++ gr::mimo::alamouti_encode_cc class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """make() -> alamouti_encode_cc_sptr"""
        return _mimo_swig.alamouti_encode_cc_make()

    make = staticmethod(make)
    __swig_destroy__ = _mimo_swig.delete_alamouti_encode_cc
    __del__ = lambda self : None;
alamouti_encode_cc_swigregister = _mimo_swig.alamouti_encode_cc_swigregister
alamouti_encode_cc_swigregister(alamouti_encode_cc)

def alamouti_encode_cc_make():
  """alamouti_encode_cc_make() -> alamouti_encode_cc_sptr"""
  return _mimo_swig.alamouti_encode_cc_make()

class alamouti_encode_cc_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mimo::alamouti_encode_cc)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mimo::alamouti_encode_cc)> self) -> alamouti_encode_cc_sptr
        __init__(boost::shared_ptr<(gr::mimo::alamouti_encode_cc)> self, alamouti_encode_cc p) -> alamouti_encode_cc_sptr
        """
        this = _mimo_swig.new_alamouti_encode_cc_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(alamouti_encode_cc_sptr self) -> alamouti_encode_cc"""
        return _mimo_swig.alamouti_encode_cc_sptr___deref__(self)

    __swig_destroy__ = _mimo_swig.delete_alamouti_encode_cc_sptr
    __del__ = lambda self : None;
    def make(self):
        """make(alamouti_encode_cc_sptr self) -> alamouti_encode_cc_sptr"""
        return _mimo_swig.alamouti_encode_cc_sptr_make(self)

    def history(self):
        """history(alamouti_encode_cc_sptr self) -> unsigned int"""
        return _mimo_swig.alamouti_encode_cc_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(alamouti_encode_cc_sptr self, int which, int delay)
        declare_sample_delay(alamouti_encode_cc_sptr self, unsigned int delay)
        """
        return _mimo_swig.alamouti_encode_cc_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(alamouti_encode_cc_sptr self, int which) -> unsigned int"""
        return _mimo_swig.alamouti_encode_cc_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(alamouti_encode_cc_sptr self) -> int"""
        return _mimo_swig.alamouti_encode_cc_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(alamouti_encode_cc_sptr self) -> double"""
        return _mimo_swig.alamouti_encode_cc_sptr_relative_rate(self)

    def start(self):
        """start(alamouti_encode_cc_sptr self) -> bool"""
        return _mimo_swig.alamouti_encode_cc_sptr_start(self)

    def stop(self):
        """stop(alamouti_encode_cc_sptr self) -> bool"""
        return _mimo_swig.alamouti_encode_cc_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(alamouti_encode_cc_sptr self, unsigned int which_input) -> uint64_t"""
        return _mimo_swig.alamouti_encode_cc_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(alamouti_encode_cc_sptr self, unsigned int which_output) -> uint64_t"""
        return _mimo_swig.alamouti_encode_cc_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(alamouti_encode_cc_sptr self) -> int"""
        return _mimo_swig.alamouti_encode_cc_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(alamouti_encode_cc_sptr self, int m)"""
        return _mimo_swig.alamouti_encode_cc_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(alamouti_encode_cc_sptr self)"""
        return _mimo_swig.alamouti_encode_cc_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(alamouti_encode_cc_sptr self) -> bool"""
        return _mimo_swig.alamouti_encode_cc_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(alamouti_encode_cc_sptr self, int m)"""
        return _mimo_swig.alamouti_encode_cc_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(alamouti_encode_cc_sptr self) -> int"""
        return _mimo_swig.alamouti_encode_cc_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(alamouti_encode_cc_sptr self, int i) -> long"""
        return _mimo_swig.alamouti_encode_cc_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(alamouti_encode_cc_sptr self, long max_output_buffer)
        set_max_output_buffer(alamouti_encode_cc_sptr self, int port, long max_output_buffer)
        """
        return _mimo_swig.alamouti_encode_cc_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(alamouti_encode_cc_sptr self, int i) -> long"""
        return _mimo_swig.alamouti_encode_cc_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(alamouti_encode_cc_sptr self, long min_output_buffer)
        set_min_output_buffer(alamouti_encode_cc_sptr self, int port, long min_output_buffer)
        """
        return _mimo_swig.alamouti_encode_cc_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(alamouti_encode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_encode_cc_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(alamouti_encode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_encode_cc_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(alamouti_encode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_encode_cc_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(alamouti_encode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_encode_cc_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(alamouti_encode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_encode_cc_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(alamouti_encode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_encode_cc_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(alamouti_encode_cc_sptr self, int which) -> float
        pc_input_buffers_full(alamouti_encode_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_encode_cc_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(alamouti_encode_cc_sptr self, int which) -> float
        pc_input_buffers_full_avg(alamouti_encode_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_encode_cc_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(alamouti_encode_cc_sptr self, int which) -> float
        pc_input_buffers_full_var(alamouti_encode_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_encode_cc_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(alamouti_encode_cc_sptr self, int which) -> float
        pc_output_buffers_full(alamouti_encode_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_encode_cc_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(alamouti_encode_cc_sptr self, int which) -> float
        pc_output_buffers_full_avg(alamouti_encode_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_encode_cc_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(alamouti_encode_cc_sptr self, int which) -> float
        pc_output_buffers_full_var(alamouti_encode_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_encode_cc_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(alamouti_encode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_encode_cc_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(alamouti_encode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_encode_cc_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(alamouti_encode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_encode_cc_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(alamouti_encode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_encode_cc_sptr_pc_work_time_total(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(alamouti_encode_cc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mimo_swig.alamouti_encode_cc_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(alamouti_encode_cc_sptr self)"""
        return _mimo_swig.alamouti_encode_cc_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(alamouti_encode_cc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mimo_swig.alamouti_encode_cc_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(alamouti_encode_cc_sptr self) -> int"""
        return _mimo_swig.alamouti_encode_cc_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(alamouti_encode_cc_sptr self) -> int"""
        return _mimo_swig.alamouti_encode_cc_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(alamouti_encode_cc_sptr self, int priority) -> int"""
        return _mimo_swig.alamouti_encode_cc_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(alamouti_encode_cc_sptr self) -> std::string"""
        return _mimo_swig.alamouti_encode_cc_sptr_name(self)

    def symbol_name(self):
        """symbol_name(alamouti_encode_cc_sptr self) -> std::string"""
        return _mimo_swig.alamouti_encode_cc_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(alamouti_encode_cc_sptr self) -> io_signature_sptr"""
        return _mimo_swig.alamouti_encode_cc_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(alamouti_encode_cc_sptr self) -> io_signature_sptr"""
        return _mimo_swig.alamouti_encode_cc_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(alamouti_encode_cc_sptr self) -> long"""
        return _mimo_swig.alamouti_encode_cc_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(alamouti_encode_cc_sptr self) -> basic_block_sptr"""
        return _mimo_swig.alamouti_encode_cc_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(alamouti_encode_cc_sptr self, int ninputs, int noutputs) -> bool"""
        return _mimo_swig.alamouti_encode_cc_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(alamouti_encode_cc_sptr self) -> std::string"""
        return _mimo_swig.alamouti_encode_cc_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(alamouti_encode_cc_sptr self, std::string name)"""
        return _mimo_swig.alamouti_encode_cc_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(alamouti_encode_cc_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mimo_swig.alamouti_encode_cc_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(alamouti_encode_cc_sptr self) -> swig_int_ptr"""
        return _mimo_swig.alamouti_encode_cc_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(alamouti_encode_cc_sptr self) -> swig_int_ptr"""
        return _mimo_swig.alamouti_encode_cc_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(alamouti_encode_cc_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mimo_swig.alamouti_encode_cc_sptr_message_subscribers(self, *args, **kwargs)

alamouti_encode_cc_sptr_swigregister = _mimo_swig.alamouti_encode_cc_sptr_swigregister
alamouti_encode_cc_sptr_swigregister(alamouti_encode_cc_sptr)

alamouti_encode_cc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
alamouti_encode_cc = alamouti_encode_cc.make;

class alamouti_decode_cc(object):
    """Proxy of C++ gr::mimo::alamouti_decode_cc class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """make() -> alamouti_decode_cc_sptr"""
        return _mimo_swig.alamouti_decode_cc_make()

    make = staticmethod(make)
    __swig_destroy__ = _mimo_swig.delete_alamouti_decode_cc
    __del__ = lambda self : None;
alamouti_decode_cc_swigregister = _mimo_swig.alamouti_decode_cc_swigregister
alamouti_decode_cc_swigregister(alamouti_decode_cc)

def alamouti_decode_cc_make():
  """alamouti_decode_cc_make() -> alamouti_decode_cc_sptr"""
  return _mimo_swig.alamouti_decode_cc_make()

class alamouti_decode_cc_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mimo::alamouti_decode_cc)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mimo::alamouti_decode_cc)> self) -> alamouti_decode_cc_sptr
        __init__(boost::shared_ptr<(gr::mimo::alamouti_decode_cc)> self, alamouti_decode_cc p) -> alamouti_decode_cc_sptr
        """
        this = _mimo_swig.new_alamouti_decode_cc_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(alamouti_decode_cc_sptr self) -> alamouti_decode_cc"""
        return _mimo_swig.alamouti_decode_cc_sptr___deref__(self)

    __swig_destroy__ = _mimo_swig.delete_alamouti_decode_cc_sptr
    __del__ = lambda self : None;
    def make(self):
        """make(alamouti_decode_cc_sptr self) -> alamouti_decode_cc_sptr"""
        return _mimo_swig.alamouti_decode_cc_sptr_make(self)

    def history(self):
        """history(alamouti_decode_cc_sptr self) -> unsigned int"""
        return _mimo_swig.alamouti_decode_cc_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(alamouti_decode_cc_sptr self, int which, int delay)
        declare_sample_delay(alamouti_decode_cc_sptr self, unsigned int delay)
        """
        return _mimo_swig.alamouti_decode_cc_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(alamouti_decode_cc_sptr self, int which) -> unsigned int"""
        return _mimo_swig.alamouti_decode_cc_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(alamouti_decode_cc_sptr self) -> int"""
        return _mimo_swig.alamouti_decode_cc_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(alamouti_decode_cc_sptr self) -> double"""
        return _mimo_swig.alamouti_decode_cc_sptr_relative_rate(self)

    def start(self):
        """start(alamouti_decode_cc_sptr self) -> bool"""
        return _mimo_swig.alamouti_decode_cc_sptr_start(self)

    def stop(self):
        """stop(alamouti_decode_cc_sptr self) -> bool"""
        return _mimo_swig.alamouti_decode_cc_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(alamouti_decode_cc_sptr self, unsigned int which_input) -> uint64_t"""
        return _mimo_swig.alamouti_decode_cc_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(alamouti_decode_cc_sptr self, unsigned int which_output) -> uint64_t"""
        return _mimo_swig.alamouti_decode_cc_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(alamouti_decode_cc_sptr self) -> int"""
        return _mimo_swig.alamouti_decode_cc_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(alamouti_decode_cc_sptr self, int m)"""
        return _mimo_swig.alamouti_decode_cc_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(alamouti_decode_cc_sptr self)"""
        return _mimo_swig.alamouti_decode_cc_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(alamouti_decode_cc_sptr self) -> bool"""
        return _mimo_swig.alamouti_decode_cc_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(alamouti_decode_cc_sptr self, int m)"""
        return _mimo_swig.alamouti_decode_cc_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(alamouti_decode_cc_sptr self) -> int"""
        return _mimo_swig.alamouti_decode_cc_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(alamouti_decode_cc_sptr self, int i) -> long"""
        return _mimo_swig.alamouti_decode_cc_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(alamouti_decode_cc_sptr self, long max_output_buffer)
        set_max_output_buffer(alamouti_decode_cc_sptr self, int port, long max_output_buffer)
        """
        return _mimo_swig.alamouti_decode_cc_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(alamouti_decode_cc_sptr self, int i) -> long"""
        return _mimo_swig.alamouti_decode_cc_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(alamouti_decode_cc_sptr self, long min_output_buffer)
        set_min_output_buffer(alamouti_decode_cc_sptr self, int port, long min_output_buffer)
        """
        return _mimo_swig.alamouti_decode_cc_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(alamouti_decode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_decode_cc_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(alamouti_decode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_decode_cc_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(alamouti_decode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_decode_cc_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(alamouti_decode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_decode_cc_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(alamouti_decode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_decode_cc_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(alamouti_decode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_decode_cc_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(alamouti_decode_cc_sptr self, int which) -> float
        pc_input_buffers_full(alamouti_decode_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_decode_cc_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(alamouti_decode_cc_sptr self, int which) -> float
        pc_input_buffers_full_avg(alamouti_decode_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_decode_cc_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(alamouti_decode_cc_sptr self, int which) -> float
        pc_input_buffers_full_var(alamouti_decode_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_decode_cc_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(alamouti_decode_cc_sptr self, int which) -> float
        pc_output_buffers_full(alamouti_decode_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_decode_cc_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(alamouti_decode_cc_sptr self, int which) -> float
        pc_output_buffers_full_avg(alamouti_decode_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_decode_cc_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(alamouti_decode_cc_sptr self, int which) -> float
        pc_output_buffers_full_var(alamouti_decode_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_decode_cc_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(alamouti_decode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_decode_cc_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(alamouti_decode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_decode_cc_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(alamouti_decode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_decode_cc_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(alamouti_decode_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_decode_cc_sptr_pc_work_time_total(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(alamouti_decode_cc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mimo_swig.alamouti_decode_cc_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(alamouti_decode_cc_sptr self)"""
        return _mimo_swig.alamouti_decode_cc_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(alamouti_decode_cc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mimo_swig.alamouti_decode_cc_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(alamouti_decode_cc_sptr self) -> int"""
        return _mimo_swig.alamouti_decode_cc_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(alamouti_decode_cc_sptr self) -> int"""
        return _mimo_swig.alamouti_decode_cc_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(alamouti_decode_cc_sptr self, int priority) -> int"""
        return _mimo_swig.alamouti_decode_cc_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(alamouti_decode_cc_sptr self) -> std::string"""
        return _mimo_swig.alamouti_decode_cc_sptr_name(self)

    def symbol_name(self):
        """symbol_name(alamouti_decode_cc_sptr self) -> std::string"""
        return _mimo_swig.alamouti_decode_cc_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(alamouti_decode_cc_sptr self) -> io_signature_sptr"""
        return _mimo_swig.alamouti_decode_cc_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(alamouti_decode_cc_sptr self) -> io_signature_sptr"""
        return _mimo_swig.alamouti_decode_cc_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(alamouti_decode_cc_sptr self) -> long"""
        return _mimo_swig.alamouti_decode_cc_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(alamouti_decode_cc_sptr self) -> basic_block_sptr"""
        return _mimo_swig.alamouti_decode_cc_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(alamouti_decode_cc_sptr self, int ninputs, int noutputs) -> bool"""
        return _mimo_swig.alamouti_decode_cc_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(alamouti_decode_cc_sptr self) -> std::string"""
        return _mimo_swig.alamouti_decode_cc_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(alamouti_decode_cc_sptr self, std::string name)"""
        return _mimo_swig.alamouti_decode_cc_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(alamouti_decode_cc_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mimo_swig.alamouti_decode_cc_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(alamouti_decode_cc_sptr self) -> swig_int_ptr"""
        return _mimo_swig.alamouti_decode_cc_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(alamouti_decode_cc_sptr self) -> swig_int_ptr"""
        return _mimo_swig.alamouti_decode_cc_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(alamouti_decode_cc_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mimo_swig.alamouti_decode_cc_sptr_message_subscribers(self, *args, **kwargs)

alamouti_decode_cc_sptr_swigregister = _mimo_swig.alamouti_decode_cc_sptr_swigregister
alamouti_decode_cc_sptr_swigregister(alamouti_decode_cc_sptr)

alamouti_decode_cc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
alamouti_decode_cc = alamouti_decode_cc.make;

class preamble_detector(object):
    """Proxy of C++ gr::mimo::preamble_detector class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make():
        """make() -> preamble_detector_sptr"""
        return _mimo_swig.preamble_detector_make()

    make = staticmethod(make)
    __swig_destroy__ = _mimo_swig.delete_preamble_detector
    __del__ = lambda self : None;
preamble_detector_swigregister = _mimo_swig.preamble_detector_swigregister
preamble_detector_swigregister(preamble_detector)

def preamble_detector_make():
  """preamble_detector_make() -> preamble_detector_sptr"""
  return _mimo_swig.preamble_detector_make()

class preamble_detector_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mimo::preamble_detector)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mimo::preamble_detector)> self) -> preamble_detector_sptr
        __init__(boost::shared_ptr<(gr::mimo::preamble_detector)> self, preamble_detector p) -> preamble_detector_sptr
        """
        this = _mimo_swig.new_preamble_detector_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(preamble_detector_sptr self) -> preamble_detector"""
        return _mimo_swig.preamble_detector_sptr___deref__(self)

    __swig_destroy__ = _mimo_swig.delete_preamble_detector_sptr
    __del__ = lambda self : None;
    def make(self):
        """make(preamble_detector_sptr self) -> preamble_detector_sptr"""
        return _mimo_swig.preamble_detector_sptr_make(self)

    def history(self):
        """history(preamble_detector_sptr self) -> unsigned int"""
        return _mimo_swig.preamble_detector_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(preamble_detector_sptr self, int which, int delay)
        declare_sample_delay(preamble_detector_sptr self, unsigned int delay)
        """
        return _mimo_swig.preamble_detector_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(preamble_detector_sptr self, int which) -> unsigned int"""
        return _mimo_swig.preamble_detector_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(preamble_detector_sptr self) -> int"""
        return _mimo_swig.preamble_detector_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(preamble_detector_sptr self) -> double"""
        return _mimo_swig.preamble_detector_sptr_relative_rate(self)

    def start(self):
        """start(preamble_detector_sptr self) -> bool"""
        return _mimo_swig.preamble_detector_sptr_start(self)

    def stop(self):
        """stop(preamble_detector_sptr self) -> bool"""
        return _mimo_swig.preamble_detector_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(preamble_detector_sptr self, unsigned int which_input) -> uint64_t"""
        return _mimo_swig.preamble_detector_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(preamble_detector_sptr self, unsigned int which_output) -> uint64_t"""
        return _mimo_swig.preamble_detector_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(preamble_detector_sptr self) -> int"""
        return _mimo_swig.preamble_detector_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(preamble_detector_sptr self, int m)"""
        return _mimo_swig.preamble_detector_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(preamble_detector_sptr self)"""
        return _mimo_swig.preamble_detector_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(preamble_detector_sptr self) -> bool"""
        return _mimo_swig.preamble_detector_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(preamble_detector_sptr self, int m)"""
        return _mimo_swig.preamble_detector_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(preamble_detector_sptr self) -> int"""
        return _mimo_swig.preamble_detector_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(preamble_detector_sptr self, int i) -> long"""
        return _mimo_swig.preamble_detector_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(preamble_detector_sptr self, long max_output_buffer)
        set_max_output_buffer(preamble_detector_sptr self, int port, long max_output_buffer)
        """
        return _mimo_swig.preamble_detector_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(preamble_detector_sptr self, int i) -> long"""
        return _mimo_swig.preamble_detector_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(preamble_detector_sptr self, long min_output_buffer)
        set_min_output_buffer(preamble_detector_sptr self, int port, long min_output_buffer)
        """
        return _mimo_swig.preamble_detector_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(preamble_detector_sptr self) -> float"""
        return _mimo_swig.preamble_detector_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(preamble_detector_sptr self) -> float"""
        return _mimo_swig.preamble_detector_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(preamble_detector_sptr self) -> float"""
        return _mimo_swig.preamble_detector_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(preamble_detector_sptr self) -> float"""
        return _mimo_swig.preamble_detector_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(preamble_detector_sptr self) -> float"""
        return _mimo_swig.preamble_detector_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(preamble_detector_sptr self) -> float"""
        return _mimo_swig.preamble_detector_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(preamble_detector_sptr self, int which) -> float
        pc_input_buffers_full(preamble_detector_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.preamble_detector_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(preamble_detector_sptr self, int which) -> float
        pc_input_buffers_full_avg(preamble_detector_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.preamble_detector_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(preamble_detector_sptr self, int which) -> float
        pc_input_buffers_full_var(preamble_detector_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.preamble_detector_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(preamble_detector_sptr self, int which) -> float
        pc_output_buffers_full(preamble_detector_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.preamble_detector_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(preamble_detector_sptr self, int which) -> float
        pc_output_buffers_full_avg(preamble_detector_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.preamble_detector_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(preamble_detector_sptr self, int which) -> float
        pc_output_buffers_full_var(preamble_detector_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.preamble_detector_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(preamble_detector_sptr self) -> float"""
        return _mimo_swig.preamble_detector_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(preamble_detector_sptr self) -> float"""
        return _mimo_swig.preamble_detector_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(preamble_detector_sptr self) -> float"""
        return _mimo_swig.preamble_detector_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(preamble_detector_sptr self) -> float"""
        return _mimo_swig.preamble_detector_sptr_pc_work_time_total(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(preamble_detector_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mimo_swig.preamble_detector_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(preamble_detector_sptr self)"""
        return _mimo_swig.preamble_detector_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(preamble_detector_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mimo_swig.preamble_detector_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(preamble_detector_sptr self) -> int"""
        return _mimo_swig.preamble_detector_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(preamble_detector_sptr self) -> int"""
        return _mimo_swig.preamble_detector_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(preamble_detector_sptr self, int priority) -> int"""
        return _mimo_swig.preamble_detector_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(preamble_detector_sptr self) -> std::string"""
        return _mimo_swig.preamble_detector_sptr_name(self)

    def symbol_name(self):
        """symbol_name(preamble_detector_sptr self) -> std::string"""
        return _mimo_swig.preamble_detector_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(preamble_detector_sptr self) -> io_signature_sptr"""
        return _mimo_swig.preamble_detector_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(preamble_detector_sptr self) -> io_signature_sptr"""
        return _mimo_swig.preamble_detector_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(preamble_detector_sptr self) -> long"""
        return _mimo_swig.preamble_detector_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(preamble_detector_sptr self) -> basic_block_sptr"""
        return _mimo_swig.preamble_detector_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(preamble_detector_sptr self, int ninputs, int noutputs) -> bool"""
        return _mimo_swig.preamble_detector_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(preamble_detector_sptr self) -> std::string"""
        return _mimo_swig.preamble_detector_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(preamble_detector_sptr self, std::string name)"""
        return _mimo_swig.preamble_detector_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(preamble_detector_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mimo_swig.preamble_detector_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(preamble_detector_sptr self) -> swig_int_ptr"""
        return _mimo_swig.preamble_detector_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(preamble_detector_sptr self) -> swig_int_ptr"""
        return _mimo_swig.preamble_detector_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(preamble_detector_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mimo_swig.preamble_detector_sptr_message_subscribers(self, *args, **kwargs)

preamble_detector_sptr_swigregister = _mimo_swig.preamble_detector_sptr_swigregister
preamble_detector_sptr_swigregister(preamble_detector_sptr)

preamble_detector_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
preamble_detector = preamble_detector.make;

class alamouti_ofdm_tx_cc(object):
    """Proxy of C++ gr::mimo::alamouti_ofdm_tx_cc class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(int fft_length) -> alamouti_ofdm_tx_cc_sptr"""
        return _mimo_swig.alamouti_ofdm_tx_cc_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mimo_swig.delete_alamouti_ofdm_tx_cc
    __del__ = lambda self : None;
alamouti_ofdm_tx_cc_swigregister = _mimo_swig.alamouti_ofdm_tx_cc_swigregister
alamouti_ofdm_tx_cc_swigregister(alamouti_ofdm_tx_cc)

def alamouti_ofdm_tx_cc_make(*args, **kwargs):
  """alamouti_ofdm_tx_cc_make(int fft_length) -> alamouti_ofdm_tx_cc_sptr"""
  return _mimo_swig.alamouti_ofdm_tx_cc_make(*args, **kwargs)

class alamouti_ofdm_tx_cc_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mimo::alamouti_ofdm_tx_cc)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mimo::alamouti_ofdm_tx_cc)> self) -> alamouti_ofdm_tx_cc_sptr
        __init__(boost::shared_ptr<(gr::mimo::alamouti_ofdm_tx_cc)> self, alamouti_ofdm_tx_cc p) -> alamouti_ofdm_tx_cc_sptr
        """
        this = _mimo_swig.new_alamouti_ofdm_tx_cc_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(alamouti_ofdm_tx_cc_sptr self) -> alamouti_ofdm_tx_cc"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr___deref__(self)

    __swig_destroy__ = _mimo_swig.delete_alamouti_ofdm_tx_cc_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(alamouti_ofdm_tx_cc_sptr self, int fft_length) -> alamouti_ofdm_tx_cc_sptr"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(alamouti_ofdm_tx_cc_sptr self) -> unsigned int"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(alamouti_ofdm_tx_cc_sptr self, int which, int delay)
        declare_sample_delay(alamouti_ofdm_tx_cc_sptr self, unsigned int delay)
        """
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(alamouti_ofdm_tx_cc_sptr self, int which) -> unsigned int"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(alamouti_ofdm_tx_cc_sptr self) -> int"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(alamouti_ofdm_tx_cc_sptr self) -> double"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_relative_rate(self)

    def start(self):
        """start(alamouti_ofdm_tx_cc_sptr self) -> bool"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_start(self)

    def stop(self):
        """stop(alamouti_ofdm_tx_cc_sptr self) -> bool"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(alamouti_ofdm_tx_cc_sptr self, unsigned int which_input) -> uint64_t"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(alamouti_ofdm_tx_cc_sptr self, unsigned int which_output) -> uint64_t"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(alamouti_ofdm_tx_cc_sptr self) -> int"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(alamouti_ofdm_tx_cc_sptr self, int m)"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(alamouti_ofdm_tx_cc_sptr self)"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(alamouti_ofdm_tx_cc_sptr self) -> bool"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(alamouti_ofdm_tx_cc_sptr self, int m)"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(alamouti_ofdm_tx_cc_sptr self) -> int"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(alamouti_ofdm_tx_cc_sptr self, int i) -> long"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(alamouti_ofdm_tx_cc_sptr self, long max_output_buffer)
        set_max_output_buffer(alamouti_ofdm_tx_cc_sptr self, int port, long max_output_buffer)
        """
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(alamouti_ofdm_tx_cc_sptr self, int i) -> long"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(alamouti_ofdm_tx_cc_sptr self, long min_output_buffer)
        set_min_output_buffer(alamouti_ofdm_tx_cc_sptr self, int port, long min_output_buffer)
        """
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(alamouti_ofdm_tx_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(alamouti_ofdm_tx_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(alamouti_ofdm_tx_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(alamouti_ofdm_tx_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(alamouti_ofdm_tx_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(alamouti_ofdm_tx_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(alamouti_ofdm_tx_cc_sptr self, int which) -> float
        pc_input_buffers_full(alamouti_ofdm_tx_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(alamouti_ofdm_tx_cc_sptr self, int which) -> float
        pc_input_buffers_full_avg(alamouti_ofdm_tx_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(alamouti_ofdm_tx_cc_sptr self, int which) -> float
        pc_input_buffers_full_var(alamouti_ofdm_tx_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(alamouti_ofdm_tx_cc_sptr self, int which) -> float
        pc_output_buffers_full(alamouti_ofdm_tx_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(alamouti_ofdm_tx_cc_sptr self, int which) -> float
        pc_output_buffers_full_avg(alamouti_ofdm_tx_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(alamouti_ofdm_tx_cc_sptr self, int which) -> float
        pc_output_buffers_full_var(alamouti_ofdm_tx_cc_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(alamouti_ofdm_tx_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(alamouti_ofdm_tx_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(alamouti_ofdm_tx_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(alamouti_ofdm_tx_cc_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_pc_work_time_total(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(alamouti_ofdm_tx_cc_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(alamouti_ofdm_tx_cc_sptr self)"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(alamouti_ofdm_tx_cc_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(alamouti_ofdm_tx_cc_sptr self) -> int"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(alamouti_ofdm_tx_cc_sptr self) -> int"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(alamouti_ofdm_tx_cc_sptr self, int priority) -> int"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(alamouti_ofdm_tx_cc_sptr self) -> std::string"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_name(self)

    def symbol_name(self):
        """symbol_name(alamouti_ofdm_tx_cc_sptr self) -> std::string"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(alamouti_ofdm_tx_cc_sptr self) -> io_signature_sptr"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(alamouti_ofdm_tx_cc_sptr self) -> io_signature_sptr"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(alamouti_ofdm_tx_cc_sptr self) -> long"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(alamouti_ofdm_tx_cc_sptr self) -> basic_block_sptr"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(alamouti_ofdm_tx_cc_sptr self, int ninputs, int noutputs) -> bool"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(alamouti_ofdm_tx_cc_sptr self) -> std::string"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(alamouti_ofdm_tx_cc_sptr self, std::string name)"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(alamouti_ofdm_tx_cc_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(alamouti_ofdm_tx_cc_sptr self) -> swig_int_ptr"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(alamouti_ofdm_tx_cc_sptr self) -> swig_int_ptr"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(alamouti_ofdm_tx_cc_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mimo_swig.alamouti_ofdm_tx_cc_sptr_message_subscribers(self, *args, **kwargs)

alamouti_ofdm_tx_cc_sptr_swigregister = _mimo_swig.alamouti_ofdm_tx_cc_sptr_swigregister
alamouti_ofdm_tx_cc_sptr_swigregister(alamouti_ofdm_tx_cc_sptr)

alamouti_ofdm_tx_cc_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
alamouti_ofdm_tx_cc = alamouti_ofdm_tx_cc.make;

class ofdm_mapper(object):
    """Proxy of C++ gr::mimo::ofdm_mapper class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(pmt_vector_cfloat constellation, unsigned int occupied_carriers, unsigned int fft_length) -> ofdm_mapper_sptr"""
        return _mimo_swig.ofdm_mapper_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mimo_swig.delete_ofdm_mapper
    __del__ = lambda self : None;
ofdm_mapper_swigregister = _mimo_swig.ofdm_mapper_swigregister
ofdm_mapper_swigregister(ofdm_mapper)

def ofdm_mapper_make(*args, **kwargs):
  """ofdm_mapper_make(pmt_vector_cfloat constellation, unsigned int occupied_carriers, unsigned int fft_length) -> ofdm_mapper_sptr"""
  return _mimo_swig.ofdm_mapper_make(*args, **kwargs)

class ofdm_mapper_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mimo::ofdm_mapper)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mimo::ofdm_mapper)> self) -> ofdm_mapper_sptr
        __init__(boost::shared_ptr<(gr::mimo::ofdm_mapper)> self, ofdm_mapper p) -> ofdm_mapper_sptr
        """
        this = _mimo_swig.new_ofdm_mapper_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ofdm_mapper_sptr self) -> ofdm_mapper"""
        return _mimo_swig.ofdm_mapper_sptr___deref__(self)

    __swig_destroy__ = _mimo_swig.delete_ofdm_mapper_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(ofdm_mapper_sptr self, pmt_vector_cfloat constellation, unsigned int occupied_carriers, unsigned int fft_length) -> ofdm_mapper_sptr"""
        return _mimo_swig.ofdm_mapper_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(ofdm_mapper_sptr self) -> unsigned int"""
        return _mimo_swig.ofdm_mapper_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(ofdm_mapper_sptr self, int which, int delay)
        declare_sample_delay(ofdm_mapper_sptr self, unsigned int delay)
        """
        return _mimo_swig.ofdm_mapper_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(ofdm_mapper_sptr self, int which) -> unsigned int"""
        return _mimo_swig.ofdm_mapper_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(ofdm_mapper_sptr self) -> int"""
        return _mimo_swig.ofdm_mapper_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ofdm_mapper_sptr self) -> double"""
        return _mimo_swig.ofdm_mapper_sptr_relative_rate(self)

    def start(self):
        """start(ofdm_mapper_sptr self) -> bool"""
        return _mimo_swig.ofdm_mapper_sptr_start(self)

    def stop(self):
        """stop(ofdm_mapper_sptr self) -> bool"""
        return _mimo_swig.ofdm_mapper_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ofdm_mapper_sptr self, unsigned int which_input) -> uint64_t"""
        return _mimo_swig.ofdm_mapper_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ofdm_mapper_sptr self, unsigned int which_output) -> uint64_t"""
        return _mimo_swig.ofdm_mapper_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ofdm_mapper_sptr self) -> int"""
        return _mimo_swig.ofdm_mapper_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ofdm_mapper_sptr self, int m)"""
        return _mimo_swig.ofdm_mapper_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ofdm_mapper_sptr self)"""
        return _mimo_swig.ofdm_mapper_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ofdm_mapper_sptr self) -> bool"""
        return _mimo_swig.ofdm_mapper_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(ofdm_mapper_sptr self, int m)"""
        return _mimo_swig.ofdm_mapper_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(ofdm_mapper_sptr self) -> int"""
        return _mimo_swig.ofdm_mapper_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ofdm_mapper_sptr self, int i) -> long"""
        return _mimo_swig.ofdm_mapper_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ofdm_mapper_sptr self, long max_output_buffer)
        set_max_output_buffer(ofdm_mapper_sptr self, int port, long max_output_buffer)
        """
        return _mimo_swig.ofdm_mapper_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ofdm_mapper_sptr self, int i) -> long"""
        return _mimo_swig.ofdm_mapper_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ofdm_mapper_sptr self, long min_output_buffer)
        set_min_output_buffer(ofdm_mapper_sptr self, int port, long min_output_buffer)
        """
        return _mimo_swig.ofdm_mapper_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ofdm_mapper_sptr self) -> float"""
        return _mimo_swig.ofdm_mapper_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(ofdm_mapper_sptr self) -> float"""
        return _mimo_swig.ofdm_mapper_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ofdm_mapper_sptr self) -> float"""
        return _mimo_swig.ofdm_mapper_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ofdm_mapper_sptr self) -> float"""
        return _mimo_swig.ofdm_mapper_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(ofdm_mapper_sptr self) -> float"""
        return _mimo_swig.ofdm_mapper_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ofdm_mapper_sptr self) -> float"""
        return _mimo_swig.ofdm_mapper_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ofdm_mapper_sptr self, int which) -> float
        pc_input_buffers_full(ofdm_mapper_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_mapper_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(ofdm_mapper_sptr self, int which) -> float
        pc_input_buffers_full_avg(ofdm_mapper_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_mapper_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ofdm_mapper_sptr self, int which) -> float
        pc_input_buffers_full_var(ofdm_mapper_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_mapper_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ofdm_mapper_sptr self, int which) -> float
        pc_output_buffers_full(ofdm_mapper_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_mapper_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(ofdm_mapper_sptr self, int which) -> float
        pc_output_buffers_full_avg(ofdm_mapper_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_mapper_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ofdm_mapper_sptr self, int which) -> float
        pc_output_buffers_full_var(ofdm_mapper_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_mapper_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ofdm_mapper_sptr self) -> float"""
        return _mimo_swig.ofdm_mapper_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(ofdm_mapper_sptr self) -> float"""
        return _mimo_swig.ofdm_mapper_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ofdm_mapper_sptr self) -> float"""
        return _mimo_swig.ofdm_mapper_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(ofdm_mapper_sptr self) -> float"""
        return _mimo_swig.ofdm_mapper_sptr_pc_work_time_total(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ofdm_mapper_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mimo_swig.ofdm_mapper_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ofdm_mapper_sptr self)"""
        return _mimo_swig.ofdm_mapper_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ofdm_mapper_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mimo_swig.ofdm_mapper_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(ofdm_mapper_sptr self) -> int"""
        return _mimo_swig.ofdm_mapper_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(ofdm_mapper_sptr self) -> int"""
        return _mimo_swig.ofdm_mapper_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(ofdm_mapper_sptr self, int priority) -> int"""
        return _mimo_swig.ofdm_mapper_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(ofdm_mapper_sptr self) -> std::string"""
        return _mimo_swig.ofdm_mapper_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ofdm_mapper_sptr self) -> std::string"""
        return _mimo_swig.ofdm_mapper_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ofdm_mapper_sptr self) -> io_signature_sptr"""
        return _mimo_swig.ofdm_mapper_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ofdm_mapper_sptr self) -> io_signature_sptr"""
        return _mimo_swig.ofdm_mapper_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ofdm_mapper_sptr self) -> long"""
        return _mimo_swig.ofdm_mapper_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ofdm_mapper_sptr self) -> basic_block_sptr"""
        return _mimo_swig.ofdm_mapper_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ofdm_mapper_sptr self, int ninputs, int noutputs) -> bool"""
        return _mimo_swig.ofdm_mapper_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ofdm_mapper_sptr self) -> std::string"""
        return _mimo_swig.ofdm_mapper_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ofdm_mapper_sptr self, std::string name)"""
        return _mimo_swig.ofdm_mapper_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ofdm_mapper_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mimo_swig.ofdm_mapper_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ofdm_mapper_sptr self) -> swig_int_ptr"""
        return _mimo_swig.ofdm_mapper_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ofdm_mapper_sptr self) -> swig_int_ptr"""
        return _mimo_swig.ofdm_mapper_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(ofdm_mapper_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mimo_swig.ofdm_mapper_sptr_message_subscribers(self, *args, **kwargs)

ofdm_mapper_sptr_swigregister = _mimo_swig.ofdm_mapper_sptr_swigregister
ofdm_mapper_sptr_swigregister(ofdm_mapper_sptr)

ofdm_mapper_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ofdm_mapper = ofdm_mapper.make;

class alamouti_ofdm_rx(object):
    """Proxy of C++ gr::mimo::alamouti_ofdm_rx class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(unsigned int occupied_carriers, unsigned int fft_length, unsigned int cplen) -> alamouti_ofdm_rx_sptr"""
        return _mimo_swig.alamouti_ofdm_rx_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mimo_swig.delete_alamouti_ofdm_rx
    __del__ = lambda self : None;
alamouti_ofdm_rx_swigregister = _mimo_swig.alamouti_ofdm_rx_swigregister
alamouti_ofdm_rx_swigregister(alamouti_ofdm_rx)

def alamouti_ofdm_rx_make(*args, **kwargs):
  """alamouti_ofdm_rx_make(unsigned int occupied_carriers, unsigned int fft_length, unsigned int cplen) -> alamouti_ofdm_rx_sptr"""
  return _mimo_swig.alamouti_ofdm_rx_make(*args, **kwargs)

class alamouti_ofdm_rx_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mimo::alamouti_ofdm_rx)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mimo::alamouti_ofdm_rx)> self) -> alamouti_ofdm_rx_sptr
        __init__(boost::shared_ptr<(gr::mimo::alamouti_ofdm_rx)> self, alamouti_ofdm_rx p) -> alamouti_ofdm_rx_sptr
        """
        this = _mimo_swig.new_alamouti_ofdm_rx_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(alamouti_ofdm_rx_sptr self) -> alamouti_ofdm_rx"""
        return _mimo_swig.alamouti_ofdm_rx_sptr___deref__(self)

    __swig_destroy__ = _mimo_swig.delete_alamouti_ofdm_rx_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(alamouti_ofdm_rx_sptr self, unsigned int occupied_carriers, unsigned int fft_length, unsigned int cplen) -> alamouti_ofdm_rx_sptr"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(alamouti_ofdm_rx_sptr self) -> unsigned int"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(alamouti_ofdm_rx_sptr self, int which, int delay)
        declare_sample_delay(alamouti_ofdm_rx_sptr self, unsigned int delay)
        """
        return _mimo_swig.alamouti_ofdm_rx_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(alamouti_ofdm_rx_sptr self, int which) -> unsigned int"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(alamouti_ofdm_rx_sptr self) -> int"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(alamouti_ofdm_rx_sptr self) -> double"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_relative_rate(self)

    def start(self):
        """start(alamouti_ofdm_rx_sptr self) -> bool"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_start(self)

    def stop(self):
        """stop(alamouti_ofdm_rx_sptr self) -> bool"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(alamouti_ofdm_rx_sptr self, unsigned int which_input) -> uint64_t"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(alamouti_ofdm_rx_sptr self, unsigned int which_output) -> uint64_t"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(alamouti_ofdm_rx_sptr self) -> int"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(alamouti_ofdm_rx_sptr self, int m)"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(alamouti_ofdm_rx_sptr self)"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(alamouti_ofdm_rx_sptr self) -> bool"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(alamouti_ofdm_rx_sptr self, int m)"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(alamouti_ofdm_rx_sptr self) -> int"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(alamouti_ofdm_rx_sptr self, int i) -> long"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(alamouti_ofdm_rx_sptr self, long max_output_buffer)
        set_max_output_buffer(alamouti_ofdm_rx_sptr self, int port, long max_output_buffer)
        """
        return _mimo_swig.alamouti_ofdm_rx_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(alamouti_ofdm_rx_sptr self, int i) -> long"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(alamouti_ofdm_rx_sptr self, long min_output_buffer)
        set_min_output_buffer(alamouti_ofdm_rx_sptr self, int port, long min_output_buffer)
        """
        return _mimo_swig.alamouti_ofdm_rx_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(alamouti_ofdm_rx_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(alamouti_ofdm_rx_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(alamouti_ofdm_rx_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(alamouti_ofdm_rx_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(alamouti_ofdm_rx_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(alamouti_ofdm_rx_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(alamouti_ofdm_rx_sptr self, int which) -> float
        pc_input_buffers_full(alamouti_ofdm_rx_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_ofdm_rx_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(alamouti_ofdm_rx_sptr self, int which) -> float
        pc_input_buffers_full_avg(alamouti_ofdm_rx_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_ofdm_rx_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(alamouti_ofdm_rx_sptr self, int which) -> float
        pc_input_buffers_full_var(alamouti_ofdm_rx_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_ofdm_rx_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(alamouti_ofdm_rx_sptr self, int which) -> float
        pc_output_buffers_full(alamouti_ofdm_rx_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_ofdm_rx_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(alamouti_ofdm_rx_sptr self, int which) -> float
        pc_output_buffers_full_avg(alamouti_ofdm_rx_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_ofdm_rx_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(alamouti_ofdm_rx_sptr self, int which) -> float
        pc_output_buffers_full_var(alamouti_ofdm_rx_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.alamouti_ofdm_rx_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(alamouti_ofdm_rx_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(alamouti_ofdm_rx_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(alamouti_ofdm_rx_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(alamouti_ofdm_rx_sptr self) -> float"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_pc_work_time_total(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(alamouti_ofdm_rx_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(alamouti_ofdm_rx_sptr self)"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(alamouti_ofdm_rx_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(alamouti_ofdm_rx_sptr self) -> int"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(alamouti_ofdm_rx_sptr self) -> int"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(alamouti_ofdm_rx_sptr self, int priority) -> int"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(alamouti_ofdm_rx_sptr self) -> std::string"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_name(self)

    def symbol_name(self):
        """symbol_name(alamouti_ofdm_rx_sptr self) -> std::string"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(alamouti_ofdm_rx_sptr self) -> io_signature_sptr"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(alamouti_ofdm_rx_sptr self) -> io_signature_sptr"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(alamouti_ofdm_rx_sptr self) -> long"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(alamouti_ofdm_rx_sptr self) -> basic_block_sptr"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(alamouti_ofdm_rx_sptr self, int ninputs, int noutputs) -> bool"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(alamouti_ofdm_rx_sptr self) -> std::string"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(alamouti_ofdm_rx_sptr self, std::string name)"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(alamouti_ofdm_rx_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mimo_swig.alamouti_ofdm_rx_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(alamouti_ofdm_rx_sptr self) -> swig_int_ptr"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(alamouti_ofdm_rx_sptr self) -> swig_int_ptr"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(alamouti_ofdm_rx_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mimo_swig.alamouti_ofdm_rx_sptr_message_subscribers(self, *args, **kwargs)

alamouti_ofdm_rx_sptr_swigregister = _mimo_swig.alamouti_ofdm_rx_sptr_swigregister
alamouti_ofdm_rx_sptr_swigregister(alamouti_ofdm_rx_sptr)

alamouti_ofdm_rx_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
alamouti_ofdm_rx = alamouti_ofdm_rx.make;

class ofdm_demapper(object):
    """Proxy of C++ gr::mimo::ofdm_demapper class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(unsigned int occupied_carriers) -> ofdm_demapper_sptr"""
        return _mimo_swig.ofdm_demapper_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mimo_swig.delete_ofdm_demapper
    __del__ = lambda self : None;
ofdm_demapper_swigregister = _mimo_swig.ofdm_demapper_swigregister
ofdm_demapper_swigregister(ofdm_demapper)

def ofdm_demapper_make(*args, **kwargs):
  """ofdm_demapper_make(unsigned int occupied_carriers) -> ofdm_demapper_sptr"""
  return _mimo_swig.ofdm_demapper_make(*args, **kwargs)

class ofdm_demapper_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mimo::ofdm_demapper)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mimo::ofdm_demapper)> self) -> ofdm_demapper_sptr
        __init__(boost::shared_ptr<(gr::mimo::ofdm_demapper)> self, ofdm_demapper p) -> ofdm_demapper_sptr
        """
        this = _mimo_swig.new_ofdm_demapper_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ofdm_demapper_sptr self) -> ofdm_demapper"""
        return _mimo_swig.ofdm_demapper_sptr___deref__(self)

    __swig_destroy__ = _mimo_swig.delete_ofdm_demapper_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(ofdm_demapper_sptr self, unsigned int occupied_carriers) -> ofdm_demapper_sptr"""
        return _mimo_swig.ofdm_demapper_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(ofdm_demapper_sptr self) -> unsigned int"""
        return _mimo_swig.ofdm_demapper_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(ofdm_demapper_sptr self, int which, int delay)
        declare_sample_delay(ofdm_demapper_sptr self, unsigned int delay)
        """
        return _mimo_swig.ofdm_demapper_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(ofdm_demapper_sptr self, int which) -> unsigned int"""
        return _mimo_swig.ofdm_demapper_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(ofdm_demapper_sptr self) -> int"""
        return _mimo_swig.ofdm_demapper_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ofdm_demapper_sptr self) -> double"""
        return _mimo_swig.ofdm_demapper_sptr_relative_rate(self)

    def start(self):
        """start(ofdm_demapper_sptr self) -> bool"""
        return _mimo_swig.ofdm_demapper_sptr_start(self)

    def stop(self):
        """stop(ofdm_demapper_sptr self) -> bool"""
        return _mimo_swig.ofdm_demapper_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ofdm_demapper_sptr self, unsigned int which_input) -> uint64_t"""
        return _mimo_swig.ofdm_demapper_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ofdm_demapper_sptr self, unsigned int which_output) -> uint64_t"""
        return _mimo_swig.ofdm_demapper_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ofdm_demapper_sptr self) -> int"""
        return _mimo_swig.ofdm_demapper_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ofdm_demapper_sptr self, int m)"""
        return _mimo_swig.ofdm_demapper_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ofdm_demapper_sptr self)"""
        return _mimo_swig.ofdm_demapper_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ofdm_demapper_sptr self) -> bool"""
        return _mimo_swig.ofdm_demapper_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(ofdm_demapper_sptr self, int m)"""
        return _mimo_swig.ofdm_demapper_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(ofdm_demapper_sptr self) -> int"""
        return _mimo_swig.ofdm_demapper_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ofdm_demapper_sptr self, int i) -> long"""
        return _mimo_swig.ofdm_demapper_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ofdm_demapper_sptr self, long max_output_buffer)
        set_max_output_buffer(ofdm_demapper_sptr self, int port, long max_output_buffer)
        """
        return _mimo_swig.ofdm_demapper_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ofdm_demapper_sptr self, int i) -> long"""
        return _mimo_swig.ofdm_demapper_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ofdm_demapper_sptr self, long min_output_buffer)
        set_min_output_buffer(ofdm_demapper_sptr self, int port, long min_output_buffer)
        """
        return _mimo_swig.ofdm_demapper_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ofdm_demapper_sptr self) -> float"""
        return _mimo_swig.ofdm_demapper_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(ofdm_demapper_sptr self) -> float"""
        return _mimo_swig.ofdm_demapper_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ofdm_demapper_sptr self) -> float"""
        return _mimo_swig.ofdm_demapper_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ofdm_demapper_sptr self) -> float"""
        return _mimo_swig.ofdm_demapper_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(ofdm_demapper_sptr self) -> float"""
        return _mimo_swig.ofdm_demapper_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ofdm_demapper_sptr self) -> float"""
        return _mimo_swig.ofdm_demapper_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ofdm_demapper_sptr self, int which) -> float
        pc_input_buffers_full(ofdm_demapper_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_demapper_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(ofdm_demapper_sptr self, int which) -> float
        pc_input_buffers_full_avg(ofdm_demapper_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_demapper_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ofdm_demapper_sptr self, int which) -> float
        pc_input_buffers_full_var(ofdm_demapper_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_demapper_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ofdm_demapper_sptr self, int which) -> float
        pc_output_buffers_full(ofdm_demapper_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_demapper_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(ofdm_demapper_sptr self, int which) -> float
        pc_output_buffers_full_avg(ofdm_demapper_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_demapper_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ofdm_demapper_sptr self, int which) -> float
        pc_output_buffers_full_var(ofdm_demapper_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_demapper_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ofdm_demapper_sptr self) -> float"""
        return _mimo_swig.ofdm_demapper_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(ofdm_demapper_sptr self) -> float"""
        return _mimo_swig.ofdm_demapper_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ofdm_demapper_sptr self) -> float"""
        return _mimo_swig.ofdm_demapper_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(ofdm_demapper_sptr self) -> float"""
        return _mimo_swig.ofdm_demapper_sptr_pc_work_time_total(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ofdm_demapper_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mimo_swig.ofdm_demapper_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ofdm_demapper_sptr self)"""
        return _mimo_swig.ofdm_demapper_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ofdm_demapper_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mimo_swig.ofdm_demapper_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(ofdm_demapper_sptr self) -> int"""
        return _mimo_swig.ofdm_demapper_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(ofdm_demapper_sptr self) -> int"""
        return _mimo_swig.ofdm_demapper_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(ofdm_demapper_sptr self, int priority) -> int"""
        return _mimo_swig.ofdm_demapper_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(ofdm_demapper_sptr self) -> std::string"""
        return _mimo_swig.ofdm_demapper_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ofdm_demapper_sptr self) -> std::string"""
        return _mimo_swig.ofdm_demapper_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ofdm_demapper_sptr self) -> io_signature_sptr"""
        return _mimo_swig.ofdm_demapper_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ofdm_demapper_sptr self) -> io_signature_sptr"""
        return _mimo_swig.ofdm_demapper_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ofdm_demapper_sptr self) -> long"""
        return _mimo_swig.ofdm_demapper_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ofdm_demapper_sptr self) -> basic_block_sptr"""
        return _mimo_swig.ofdm_demapper_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ofdm_demapper_sptr self, int ninputs, int noutputs) -> bool"""
        return _mimo_swig.ofdm_demapper_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ofdm_demapper_sptr self) -> std::string"""
        return _mimo_swig.ofdm_demapper_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ofdm_demapper_sptr self, std::string name)"""
        return _mimo_swig.ofdm_demapper_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ofdm_demapper_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mimo_swig.ofdm_demapper_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ofdm_demapper_sptr self) -> swig_int_ptr"""
        return _mimo_swig.ofdm_demapper_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ofdm_demapper_sptr self) -> swig_int_ptr"""
        return _mimo_swig.ofdm_demapper_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(ofdm_demapper_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mimo_swig.ofdm_demapper_sptr_message_subscribers(self, *args, **kwargs)

ofdm_demapper_sptr_swigregister = _mimo_swig.ofdm_demapper_sptr_swigregister
ofdm_demapper_sptr_swigregister(ofdm_demapper_sptr)

ofdm_demapper_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ofdm_demapper = ofdm_demapper.make;

class ofdm_insert_preamble_tagged(object):
    """Proxy of C++ gr::mimo::ofdm_insert_preamble_tagged class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """make(int fft_length, gr_vector_vector_complexf preamble) -> ofdm_insert_preamble_tagged_sptr"""
        return _mimo_swig.ofdm_insert_preamble_tagged_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mimo_swig.delete_ofdm_insert_preamble_tagged
    __del__ = lambda self : None;
ofdm_insert_preamble_tagged_swigregister = _mimo_swig.ofdm_insert_preamble_tagged_swigregister
ofdm_insert_preamble_tagged_swigregister(ofdm_insert_preamble_tagged)

def ofdm_insert_preamble_tagged_make(*args, **kwargs):
  """ofdm_insert_preamble_tagged_make(int fft_length, gr_vector_vector_complexf preamble) -> ofdm_insert_preamble_tagged_sptr"""
  return _mimo_swig.ofdm_insert_preamble_tagged_make(*args, **kwargs)

class ofdm_insert_preamble_tagged_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mimo::ofdm_insert_preamble_tagged)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mimo::ofdm_insert_preamble_tagged)> self) -> ofdm_insert_preamble_tagged_sptr
        __init__(boost::shared_ptr<(gr::mimo::ofdm_insert_preamble_tagged)> self, ofdm_insert_preamble_tagged p) -> ofdm_insert_preamble_tagged_sptr
        """
        this = _mimo_swig.new_ofdm_insert_preamble_tagged_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(ofdm_insert_preamble_tagged_sptr self) -> ofdm_insert_preamble_tagged"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr___deref__(self)

    __swig_destroy__ = _mimo_swig.delete_ofdm_insert_preamble_tagged_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """make(ofdm_insert_preamble_tagged_sptr self, int fft_length, gr_vector_vector_complexf preamble) -> ofdm_insert_preamble_tagged_sptr"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(ofdm_insert_preamble_tagged_sptr self) -> unsigned int"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(ofdm_insert_preamble_tagged_sptr self, int which, int delay)
        declare_sample_delay(ofdm_insert_preamble_tagged_sptr self, unsigned int delay)
        """
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(ofdm_insert_preamble_tagged_sptr self, int which) -> unsigned int"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(ofdm_insert_preamble_tagged_sptr self) -> int"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(ofdm_insert_preamble_tagged_sptr self) -> double"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_relative_rate(self)

    def start(self):
        """start(ofdm_insert_preamble_tagged_sptr self) -> bool"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_start(self)

    def stop(self):
        """stop(ofdm_insert_preamble_tagged_sptr self) -> bool"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(ofdm_insert_preamble_tagged_sptr self, unsigned int which_input) -> uint64_t"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(ofdm_insert_preamble_tagged_sptr self, unsigned int which_output) -> uint64_t"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(ofdm_insert_preamble_tagged_sptr self) -> int"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(ofdm_insert_preamble_tagged_sptr self, int m)"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ofdm_insert_preamble_tagged_sptr self)"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ofdm_insert_preamble_tagged_sptr self) -> bool"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(ofdm_insert_preamble_tagged_sptr self, int m)"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(ofdm_insert_preamble_tagged_sptr self) -> int"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(ofdm_insert_preamble_tagged_sptr self, int i) -> long"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ofdm_insert_preamble_tagged_sptr self, long max_output_buffer)
        set_max_output_buffer(ofdm_insert_preamble_tagged_sptr self, int port, long max_output_buffer)
        """
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(ofdm_insert_preamble_tagged_sptr self, int i) -> long"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ofdm_insert_preamble_tagged_sptr self, long min_output_buffer)
        set_min_output_buffer(ofdm_insert_preamble_tagged_sptr self, int port, long min_output_buffer)
        """
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(ofdm_insert_preamble_tagged_sptr self) -> float"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(ofdm_insert_preamble_tagged_sptr self) -> float"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ofdm_insert_preamble_tagged_sptr self) -> float"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(ofdm_insert_preamble_tagged_sptr self) -> float"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(ofdm_insert_preamble_tagged_sptr self) -> float"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(ofdm_insert_preamble_tagged_sptr self) -> float"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ofdm_insert_preamble_tagged_sptr self, int which) -> float
        pc_input_buffers_full(ofdm_insert_preamble_tagged_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(ofdm_insert_preamble_tagged_sptr self, int which) -> float
        pc_input_buffers_full_avg(ofdm_insert_preamble_tagged_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ofdm_insert_preamble_tagged_sptr self, int which) -> float
        pc_input_buffers_full_var(ofdm_insert_preamble_tagged_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ofdm_insert_preamble_tagged_sptr self, int which) -> float
        pc_output_buffers_full(ofdm_insert_preamble_tagged_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(ofdm_insert_preamble_tagged_sptr self, int which) -> float
        pc_output_buffers_full_avg(ofdm_insert_preamble_tagged_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ofdm_insert_preamble_tagged_sptr self, int which) -> float
        pc_output_buffers_full_var(ofdm_insert_preamble_tagged_sptr self) -> pmt_vector_float
        """
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(ofdm_insert_preamble_tagged_sptr self) -> float"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(ofdm_insert_preamble_tagged_sptr self) -> float"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(ofdm_insert_preamble_tagged_sptr self) -> float"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(ofdm_insert_preamble_tagged_sptr self) -> float"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_pc_work_time_total(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(ofdm_insert_preamble_tagged_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(ofdm_insert_preamble_tagged_sptr self)"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(ofdm_insert_preamble_tagged_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(ofdm_insert_preamble_tagged_sptr self) -> int"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(ofdm_insert_preamble_tagged_sptr self) -> int"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(ofdm_insert_preamble_tagged_sptr self, int priority) -> int"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(ofdm_insert_preamble_tagged_sptr self) -> std::string"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_name(self)

    def symbol_name(self):
        """symbol_name(ofdm_insert_preamble_tagged_sptr self) -> std::string"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(ofdm_insert_preamble_tagged_sptr self) -> io_signature_sptr"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(ofdm_insert_preamble_tagged_sptr self) -> io_signature_sptr"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(ofdm_insert_preamble_tagged_sptr self) -> long"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(ofdm_insert_preamble_tagged_sptr self) -> basic_block_sptr"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(ofdm_insert_preamble_tagged_sptr self, int ninputs, int noutputs) -> bool"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(ofdm_insert_preamble_tagged_sptr self) -> std::string"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(ofdm_insert_preamble_tagged_sptr self, std::string name)"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(ofdm_insert_preamble_tagged_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(ofdm_insert_preamble_tagged_sptr self) -> swig_int_ptr"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(ofdm_insert_preamble_tagged_sptr self) -> swig_int_ptr"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(ofdm_insert_preamble_tagged_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mimo_swig.ofdm_insert_preamble_tagged_sptr_message_subscribers(self, *args, **kwargs)

ofdm_insert_preamble_tagged_sptr_swigregister = _mimo_swig.ofdm_insert_preamble_tagged_sptr_swigregister
ofdm_insert_preamble_tagged_sptr_swigregister(ofdm_insert_preamble_tagged_sptr)

ofdm_insert_preamble_tagged_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ofdm_insert_preamble_tagged = ofdm_insert_preamble_tagged.make;



